name: PRs Time Created

on:
  pull_request:
    types: [opened, edited, reopened, synchronize]

jobs:
  prs_time_created:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Install dependencies
      run: npm install

    - name: Get open pull requests
      id: list_pull_requests
      uses: octokit/request-action@v2.x
      with:
        route: GET /repos/:owner/:repo/pulls
        owner: ${{ github.repository_owner }}
        repo: ${{ github.repository }}
        state: open

    - name: Calculate time since creation
      run: |
        const prs = ${{ steps.list_pull_requests.outputs.data }};
        const now = new Date().getTime();
        for (const pr of prs) {
          const created = new Date(pr.created_at).getTime();
          const timeSinceCreation = now - created;
          console.log(`PR #${pr.number} created ${msToTime(timeSinceCreation)} ago.`);
        }

# Helper function to convert milliseconds to human-readable time
function msToTime(duration) {
  let seconds = Math.floor((duration / 1000) % 60);
  let minutes = Math.floor((duration / (1000 * 60)) % 60);
  let hours = Math.floor((duration / (1000 * 60 * 60)) % 24);
  let days = Math.floor(duration / (1000 * 60 * 60 * 24));

  if (days > 0) {
    return `${days} day${days > 1 ? 's' : ''}, ${hours} hour${hours > 1 ? 's' : ''}, ${minutes} minute${minutes > 1 ? 's' : ''}, ${seconds} second${seconds > 1 ? 's' : ''}`;
  } else if (hours > 0) {
    return `${hours} hour${hours > 1 ? 's' : ''}, ${minutes} minute${minutes > 1 ? 's' : ''}, ${seconds} second${seconds > 1 ? 's' : ''}`;
  } else if (minutes > 0) {
    return `${minutes} minute${minutes > 1 ? 's' : ''}, ${seconds} second${seconds > 1 ? 's' : ''}`;
  } else {
    return `${seconds} second${seconds > 1 ? 's' : ''}`;
  }
}
